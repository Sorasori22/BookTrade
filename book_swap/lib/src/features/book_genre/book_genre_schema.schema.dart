// dart format width=80
// GENERATED CODE - DO NOT MODIFY BY HAND

// **************************************************************************
// KimappSchemaGenerator
// **************************************************************************

// ignore_for_file: invalid_annotation_target, unused_import, require_trailing_commas
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:kimapp/kimapp.dart';

import 'book_genre_schema.dart';

part 'book_genre_schema.schema.freezed.dart';
part 'book_genre_schema.schema.g.dart';

/// Defines the table structure for BookGenre.
/// This class provides constant string values for table and column names,
/// facilitating type-safe database operations and query building.
class BookGenreTable {
  const BookGenreTable._();

  /// The name of the database table for BookGenre entities.
  /// Use this constant for constructing SQL queries to ensure consistency.
  static const String table = "book_genres";

  /// Column: id
  /// This is the primary key column for the BookGenre table.
  /// Data type: `int`
  /// Key: `id`
  static const String id = "id";

  /// Column: name
  /// Data type: `String`
  /// Key: `name`
  static const String name = "name";
}

/// Represents the unique identifier for a BookGenre.
/// This class wraps the `int` value, providing type safety and encapsulation.
class BookGenreId extends Identity<int> {
  const BookGenreId._(this.value);

  @override
  final int value;

  /// Creates an instance of BookGenreId from a JSON value.
  /// Accepts int representations.
  /// Throws ArgumentError if the value is null or not of type int.
  factory BookGenreId.fromJson(dynamic value) {
    if (value is int) {
      return BookGenreId._(value);
    } else if (value == null) {
      throw ArgumentError.notNull('value');
    } else {
      throw ArgumentError(
          'Value of BookGenreId must be of type int, but was ${value.runtimeType}. Please provide the correct type.');
    }
  }

  /// Creates an instance of BookGenreId from a int value.
  factory BookGenreId.fromValue(int value) {
    return BookGenreId._(value);
  }
}

/// Base class of this schema, this is the parent of all generated models in this schema
abstract class BaseBookGenreSchema {}

/// Base model class for this schema, this includes all properties of the base model, and get inherited by all generated models in this schema where [inheritAllFromBase()] is called and without any excepted fields.
abstract class IBookGenreModel {
  BookGenreId get id;
  String get name;
}

/// Base model class for BookGenreModel.
@freezed
class BookGenreModel
    with _$BookGenreModel
    implements BaseBookGenreSchema, IBookGenreModel {
  const BookGenreModel._();

  /// Constructor for BookGenreModel.
  ///
  /// This class was generated by the Kimapp generator based on KimappSchema.
  ///
  /// Table Mode: `enabled` (`book_genres`)
  ///
  /// Fields:
  /// - BookGenreId id : JsonKey('id')
  /// - String name : JsonKey('name')
  @TableModel(BookGenreModel.tableName)
  @JsonSerializable(explicitToJson: true)
  const factory BookGenreModel({
    @JsonKey(name: BookGenreModel.idKey) required BookGenreId id,
    @JsonKey(name: BookGenreModel.nameKey) required String name,
  }) = _BookGenreModel;

  /// Creates an instance of BookGenreModel from a JSON map.
  factory BookGenreModel.fromJson(Map<String, dynamic> json) =>
      _$BookGenreModelFromJson(json);

  /// Supabase table configuration for this model.
  static const TableBuilder table = _tableBookGenreModel;

  /// Table name: `book_genres`
  static const String tableName = "book_genres";

  /// Field name for id field with JsonKey('id')
  static const String idKey = "id";

  /// Field name for name field with JsonKey('name')
  static const String nameKey = "name";
}

/// Represents the BookGenreLiteModel model. generated by kimapp_generator
@freezed
class BookGenreLiteModel
    with _$BookGenreLiteModel
    implements BaseBookGenreSchema {
  const BookGenreLiteModel._();

  /// Constructor for BookGenreLiteModel.
  ///
  /// This class was generated by the Kimapp generator based on KimappSchema.
  ///
  /// Table Mode: `enabled`
  /// Table Name: `book_genres`
  ///
  /// Fields:
  /// - BookGenreId id : JsonKey('id')
  /// - String name : JsonKey('name')
  @TableModel(BookGenreLiteModel.tableName)
  @JsonSerializable(explicitToJson: true)
  const factory BookGenreLiteModel({
    @JsonKey(name: BookGenreLiteModel.idKey) required BookGenreId id,
    @JsonKey(name: BookGenreLiteModel.nameKey) required String name,
  }) = _BookGenreLiteModel;

  /// Creates an instance of BookGenreLiteModel from a JSON map.
  factory BookGenreLiteModel.fromJson(Map<String, dynamic> json) =>
      _$BookGenreLiteModelFromJson(json);

  /// Supabase table configuration for this model.
  static const TableBuilder table = _tableBookGenreLiteModel;

  /// Table name: `book_genres`
  static const String tableName = "book_genres";

  /// Field name for id field with JsonKey('id')
  static const String idKey = "id";

  /// Field name for name field with JsonKey('name')
  static const String nameKey = "name";
}

/// Represents the BookGenreDetailModel model. generated by kimapp_generator
@freezed
class BookGenreDetailModel
    with _$BookGenreDetailModel
    implements BaseBookGenreSchema, IBookGenreModel {
  const BookGenreDetailModel._();

  /// Constructor for BookGenreDetailModel.
  ///
  /// This class was generated by the Kimapp generator based on KimappSchema.
  ///
  /// Table Mode: `enabled`
  /// Table Name: `book_genres`
  ///
  /// Fields:
  /// - BookGenreId id : JsonKey('id')
  /// - String name : JsonKey('name')
  /// - DateTime createdAt : JsonKey('created_at')
  @TableModel(BookGenreDetailModel.tableName)
  @JsonSerializable(explicitToJson: true)
  const factory BookGenreDetailModel({
    @JsonKey(name: BookGenreDetailModel.idKey) required BookGenreId id,
    @JsonKey(name: BookGenreDetailModel.nameKey) required String name,
    @JsonKey(name: BookGenreDetailModel.createdAtKey)
    required DateTime createdAt,
  }) = _BookGenreDetailModel;

  /// Creates an instance of BookGenreDetailModel from a JSON map.
  factory BookGenreDetailModel.fromJson(Map<String, dynamic> json) =>
      _$BookGenreDetailModelFromJson(json);

  /// Supabase table configuration for this model.
  static const TableBuilder table = _tableBookGenreDetailModel;

  /// Table name: `book_genres`
  static const String tableName = "book_genres";

  /// Field name for id field with JsonKey('id')
  static const String idKey = "id";

  /// Field name for name field with JsonKey('name')
  static const String nameKey = "name";

  /// Field name for createdAt field with JsonKey('created_at')
  static const String createdAtKey = "created_at";

  /// Converts this model to a base model.
  BookGenreModel toBookGenreModel() {
    return BookGenreModel(
      id: id,
      name: name,
    );
  }
}

/// Represents the BookGenreCreateParam model. generated by kimapp_generator
@freezed
class BookGenreCreateParam
    with _$BookGenreCreateParam
    implements BaseBookGenreSchema {
  const BookGenreCreateParam._();

  /// Constructor for BookGenreCreateParam.
  ///
  /// This class was generated by the Kimapp generator based on KimappSchema.
  ///
  /// Table Mode: `disabled`
  ///
  /// Fields:
  @JsonSerializable(explicitToJson: true)
  const factory BookGenreCreateParam() = _BookGenreCreateParam;

  /// Creates an instance of BookGenreCreateParam from a JSON map.
  factory BookGenreCreateParam.fromJson(Map<String, dynamic> json) =>
      _$BookGenreCreateParamFromJson(json);
}

/// Represents the BookGenreUpdateParam model. generated by kimapp_generator
@freezed
class BookGenreUpdateParam
    with _$BookGenreUpdateParam
    implements BaseBookGenreSchema {
  const BookGenreUpdateParam._();

  /// Constructor for BookGenreUpdateParam.
  ///
  /// This class was generated by the Kimapp generator based on KimappSchema.
  ///
  /// Table Mode: `disabled`
  ///
  /// Fields:
  @JsonSerializable(explicitToJson: true)
  const factory BookGenreUpdateParam() = _BookGenreUpdateParam;

  /// Creates an instance of BookGenreUpdateParam from a JSON map.
  factory BookGenreUpdateParam.fromJson(Map<String, dynamic> json) =>
      _$BookGenreUpdateParamFromJson(json);
}
