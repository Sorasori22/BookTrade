// dart format width=80
// GENERATED CODE - DO NOT MODIFY BY HAND

// **************************************************************************
// KimappSchemaGenerator
// **************************************************************************

// ignore_for_file: invalid_annotation_target, unused_import, require_trailing_commas
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:kimapp/kimapp.dart';

import 'package:book_swap/src/core/storage/image_object.dart';
import 'banner_schema.dart';

part 'banner_schema.schema.freezed.dart';
part 'banner_schema.schema.g.dart';

/// Defines the table structure for Banner.
/// This class provides constant string values for table and column names,
/// facilitating type-safe database operations and query building.
class BannerTable {
  const BannerTable._();

  /// The name of the database table for Banner entities.
  /// Use this constant for constructing SQL queries to ensure consistency.
  static const String table = "banners";

  /// Column: id
  /// This is the primary key column for the Banner table.
  /// Data type: `int`
  /// Key: `id`
  static const String id = "id";

  /// Column: note
  /// Data type: `String?`
  /// Key: `note`
  static const String note = "note";

  /// Column: image_path
  /// Data type: `ImageObject`
  /// Key: `image_path`
  static const String imagePath = "image_path";

  /// Column: is_active
  /// Data type: `bool`
  /// Key: `is_active`
  static const String isActive = "is_active";

  /// Column: skippable_duration_seconds
  /// Data type: `int`
  /// Key: `skippable_duration_seconds`
  static const String skippableDurationSeconds = "skippable_duration_seconds";
}

/// Represents the unique identifier for a Banner.
/// This class wraps the `int` value, providing type safety and encapsulation.
class BannerId extends Identity<int> {
  const BannerId._(this.value);

  @override
  final int value;

  /// Creates an instance of BannerId from a JSON value.
  /// Accepts int representations.
  /// Throws ArgumentError if the value is null or not of type int.
  factory BannerId.fromJson(dynamic value) {
    if (value is int) {
      return BannerId._(value);
    } else if (value == null) {
      throw ArgumentError.notNull('value');
    } else {
      throw ArgumentError(
          'Value of BannerId must be of type int, but was ${value.runtimeType}. Please provide the correct type.');
    }
  }

  /// Creates an instance of BannerId from a int value.
  factory BannerId.fromValue(int value) {
    return BannerId._(value);
  }

  /// Creates an instance of BannerId with a value of -1.
  /// This is used to represent an empty or invalid BannerId for placeholder or default values of form fields.
  /// WARNING: This is not a valid BannerId access it value through [value] or [call] will throw an error.
  factory BannerId.empty() => BannerId._(-1);
}

/// Base class of this schema, this is the parent of all generated models in this schema
abstract class BaseBannerSchema {}

/// Base model class for this schema, this includes all properties of the base model, and get inherited by all generated models in this schema where [inheritAllFromBase()] is called and without any excepted fields.
abstract class IBannerModel {
  BannerId get id;
  String? get note;
  ImageObject get imagePath;
  bool get isActive;
  int get skippableDurationSeconds;
}

/// Base model class for BannerModel.
@freezed
sealed class BannerModel
    with _$BannerModel
    implements BaseBannerSchema, IBannerModel {
  const BannerModel._();

  /// Constructor for BannerModel.
  ///
  /// This class was generated by the Kimapp generator based on KimappSchema.
  ///
  /// Table Mode: `enabled` (`banners`)
  ///
  /// Fields:
  /// - BannerId id : JsonKey('id')
  /// - String? note : JsonKey('note')
  /// - ImageObject imagePath : JsonKey('image_path')
  /// - bool isActive : JsonKey('is_active')
  /// - int skippableDurationSeconds : JsonKey('skippable_duration_seconds')
  @TableModel(BannerModel.tableName)
  @JsonSerializable(explicitToJson: true)
  const factory BannerModel({
    @JsonKey(name: BannerModel.idKey) required BannerId id,
    @JsonKey(name: BannerModel.noteKey) required String? note,
    @JsonKey(name: BannerModel.imagePathKey) required ImageObject imagePath,
    @JsonKey(name: BannerModel.isActiveKey) required bool isActive,
    @JsonKey(name: BannerModel.skippableDurationSecondsKey)
    required int skippableDurationSeconds,
  }) = _BannerModel;

  /// Creates an instance of BannerModel from a JSON map.
  factory BannerModel.fromJson(Map<String, dynamic> json) =>
      _$BannerModelFromJson(json);

  /// Supabase table configuration for this model.
  static const TableBuilder table = _tableBannerModel;

  /// Table name: `banners`
  static const String tableName = "banners";

  /// Field name for id field with JsonKey('id')
  static const String idKey = "id";

  /// Field name for note field with JsonKey('note')
  static const String noteKey = "note";

  /// Field name for imagePath field with JsonKey('image_path')
  static const String imagePathKey = "image_path";

  /// Field name for isActive field with JsonKey('is_active')
  static const String isActiveKey = "is_active";

  /// Field name for skippableDurationSeconds field with JsonKey('skippable_duration_seconds')
  static const String skippableDurationSecondsKey =
      "skippable_duration_seconds";
}

/// Represents the BannerCreateParam model. generated by kimapp_generator
@freezed
sealed class BannerCreateParam
    with _$BannerCreateParam
    implements BaseBannerSchema {
  const BannerCreateParam._();

  /// Constructor for BannerCreateParam.
  ///
  /// This class was generated by the Kimapp generator based on KimappSchema.
  ///
  /// Table Mode: `disabled`
  ///
  /// Fields:
  /// - String? note : JsonKey('note')
  /// - ImageObject imagePath : JsonKey('image_path')
  /// - bool isActive : JsonKey('is_active')
  /// - int skippableDurationSeconds : JsonKey('skippable_duration_seconds')
  @JsonSerializable(explicitToJson: true)
  const factory BannerCreateParam({
    @JsonKey(name: BannerCreateParam.noteKey) required String? note,
    @JsonKey(name: BannerCreateParam.imagePathKey)
    required ImageObject imagePath,
    @JsonKey(name: BannerCreateParam.isActiveKey) required bool isActive,
    @JsonKey(name: BannerCreateParam.skippableDurationSecondsKey)
    required int skippableDurationSeconds,
  }) = _BannerCreateParam;

  /// Creates an instance of BannerCreateParam from a JSON map.
  factory BannerCreateParam.fromJson(Map<String, dynamic> json) =>
      _$BannerCreateParamFromJson(json);

  /// Field name for note field with JsonKey('note')
  static const String noteKey = "note";

  /// Field name for imagePath field with JsonKey('image_path')
  static const String imagePathKey = "image_path";

  /// Field name for isActive field with JsonKey('is_active')
  static const String isActiveKey = "is_active";

  /// Field name for skippableDurationSeconds field with JsonKey('skippable_duration_seconds')
  static const String skippableDurationSecondsKey =
      "skippable_duration_seconds";
}
